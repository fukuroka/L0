definitions:
  order.Delivery:
    properties:
      address:
        type: string
      city:
        type: string
      email:
        type: string
      name:
        type: string
      phone:
        type: string
      region:
        type: string
      zip:
        type: string
    type: object
  order.Order:
    properties:
      customer_id:
        type: string
      date_created:
        type: string
      delivery:
        $ref: '#/definitions/order.Delivery'
      delivery_service:
        type: string
      entry:
        type: string
      internal_signature:
        type: string
      items:
        items:
          $ref: '#/definitions/order.Product'
        type: array
      locale:
        type: string
      oof_shard:
        type: string
      order_uid:
        type: string
      payment:
        $ref: '#/definitions/order.Payment'
      shardkey:
        type: string
      sm_id:
        type: integer
      track_number:
        type: string
    type: object
  order.Payment:
    properties:
      amount:
        type: integer
      bank:
        type: string
      currency:
        type: string
      custom_fee:
        type: integer
      delivery_cost:
        type: integer
      goods_total:
        type: integer
      payment_dt:
        type: integer
      provider:
        type: string
      request_id:
        type: string
      transaction:
        type: string
    type: object
  order.Product:
    properties:
      brand:
        type: string
      chrt_id:
        type: integer
      name:
        type: string
      nm_id:
        type: integer
      price:
        type: integer
      rid:
        type: string
      sale:
        type: integer
      size:
        type: string
      status:
        type: integer
      total_price:
        type: integer
      track_number:
        type: string
    type: object
info:
  contact: {}
paths:
  /healthcheck:
    get:
      description: Returns service health status
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Health check
      tags:
      - orders
  /orders/:
    get:
      description: Returns list of orders. Query param `limit` optional (default 10)
      parameters:
      - description: Limit of ids to return
        in: query
        name: limit
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              type: string
            type: array
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Get list of orders
      tags:
      - orders
    post:
      description: Generates a random order, publishes it to Kafka and returns the
        created order
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/order.Order'
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Create random order and publish to Kafka
      tags:
      - orders
  /orders/{id}:
    get:
      description: Get order details by order UID
      parameters:
      - description: Order UID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/order.Order'
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Get order by id
      tags:
      - orders
swagger: "2.0"
